
##-not used functions (to understand how some operations are fastly calculated)

def modexp(a, e, n):
    """Return fastly a ** e % n.
    Python already comports this function whose name is pow"""
    if e == 0:
        return 1
    m = 1
    while e > 1:
        if e % 2 == 1:
            m = m * a
            e = e - 1
        a = a ** 2
        e = e // 2
        m = m % n
        a = a % n
    return (m*a) % n

def powm(a,e,n):
    if e==0:
        return 1
    m=1
    while e>1:
        if e%2==1:
            m=m*a%n
            e-=1
        a=a**2%n
        e//=2
    return m*a%n

def exponent(a, e):
    """Return fastly a ** e. Python already comports this function whose name is pow"""
    if e == 0:
        return 1
    m = 1
    while e > 1:
        if e % 2 == 1:
            m = m * a
            e = e - 1
        a = a ** 2
        e = e // 2
    return m * a

def gcd(a, b):
    """Return fastly the greater same divisor of a and b.
    Python already comports this function whose name is math.gcd"""
    if b > a:
        a, b = b, a
    if b == 0:
        return a
    if a == b or a % b == 0:
        return b
    r = a % b
    while r > 0:
        last_r = r
        a = b
        b = r
        r = a % b
    return last_r

